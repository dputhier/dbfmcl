% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gene_clustering.R
\name{gene_clustering}
\alias{gene_clustering}
\title{Gene clustering using the Markov Cluster Algorithm (MCL) method.}
\usage{
gene_clustering(
  object = NULL,
  keep_nn = FALSE,
  k = 5,
  inflation = 2,
  threads = 1,
  output_path = tempdir(),
  name = NULL
)
}
\arguments{
\item{object}{A ClusterSet object.}

\item{keep_nn}{A logical value indicating whether the nearest neighbors graph from select_genes should be kept or not.}

\item{k}{If keep_nn is set to FALSE, k is an integer value indicating the size of the neighbourhood to use in the graph construction. Default is 5.}

\item{inflation}{A numeric value indicating the MCL inflation parameter. Default is 2.}

\item{threads}{An integer value indicating the number of threads to use for MCL.}

\item{output_path}{a character indicating the path where the output files will be stored.}

\item{name}{a character string giving the name for the output files. If NULL, a random name is generated.}
}
\value{
A ClusterSet object
}
\description{
This function performs gene clustering using the MCL algorithm. 
The method starts by creating a graph with genes as nodes and edges connecting each gene to its nearest neighbors.
Two methods are available based on keep_nn argument : 
* when 'keep_nn = FALSE', the method construct a graph only based on the previously selected genes.
* when 'keep_nn = TRUE', the method conserve the graph constructed using select_genes with selected genes and their nearest neighbors.
Then the method use the MCL algorithm to detect clusters of co-expressed genes.
}
\examples{
# Restrict vebosity to info messages only.
library(Seurat)
set_verbosity(1)

# Load a dataset
load_example_dataset("7871581/files/pbmc3k_medium")

# Select informative genes
res <- select_genes(pbmc3k_medium,
                    distance = "pearson",
                    row_sum=5)
                    
# Cluster informative features

## Method 1 - Construct a graph with a 
## novel neighborhood size
res <- gene_clustering(res, keep_nn = FALSE, 
                       inflation = 2.2, threads = 4)
                       
# Display the heatmap of gene clusters
res <- top_genes(res)
plot_heatmap(res)
plot_heatmap(res, cell_clusters = Seurat::Idents(pbmc3k_medium))


## Method 2 - Conserve the same neighborhood 
## size
res <- gene_clustering(res, 
                       inflation = 2.2,
                       keep_nn = TRUE)
                       
# Display the heatmap of gene clusters
res <- top_genes(res)
plot_heatmap(res)
plot_heatmap(res, cell_clusters = Seurat::Idents(pbmc3k_medium))

}
\references{
- Van Dongen S. (2000) A cluster algorithm for graphs. National
Research Institute for Mathematics and Computer Science in the 1386-3681.
}
